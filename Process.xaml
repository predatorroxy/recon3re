<Activity mc:Ignorable="sap sap2010" x:Class="ProcessTransaction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="MailFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="MailAccountName" Type="InArgument(x:String)" />
    <x:Property Name="DT_MappingTemplate" Type="InArgument(sd:DataTable)" />
    <x:Property Name="strVendorNameHeader" Type="InArgument(x:String)" />
    <x:Property Name="strDomainNameHeader" Type="InArgument(x:String)" />
    <x:Property Name="strAlphaKeyHeader" Type="InArgument(x:String)" />
    <x:Property Name="strTableStartHeader" Type="InArgument(x:String)" />
    <x:Property Name="strTableEndStartHeader" Type="InArgument(x:String)" />
    <x:Property Name="strTableEndHeader" Type="InArgument(x:String)" />
    <x:Property Name="strDomainHeader" Type="InArgument(x:String)" />
    <x:Property Name="strDurationHeader" Type="InArgument(x:String)" />
    <x:Property Name="strBankHeader" Type="InArgument(x:String)" />
    <x:Property Name="strCompanyHeader" Type="InArgument(x:String)" />
    <x:Property Name="strTableInvoiceHeader" Type="InArgument(x:String)" />
    <x:Property Name="strTableDateHeader" Type="InArgument(x:String)" />
    <x:Property Name="strTableAmountHeader" Type="InArgument(x:String)" />
    <x:Property Name="strTableTotalAmountHeader" Type="InArgument(x:String)" />
    <x:Property Name="strTableVATHeader" Type="InArgument(x:String)" />
    <x:Property Name="strNoOfDaysHeader" Type="InArgument(x:String)" />
    <x:Property Name="InputFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="BusinessExceptionFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="SystemExceptionFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="strImageExtension" Type="InArgument(x:String)" />
    <x:Property Name="strPDFExtension" Type="InArgument(x:String)" />
    <x:Property Name="strExcelExtension" Type="InArgument(x:String)" />
    <x:Property Name="strVendorFolderPath" Type="OutArgument(x:String)" />
    <x:Property Name="strEmailCopyPath" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>498,466</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. " DisplayName="ProcessTransaction" sap:VirtualizedContainerService.HintSize="478,406" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strAlphaKey" />
      <Variable x:TypeArguments="x:String" Name="strExcelFolderPath" />
      <Variable x:TypeArguments="x:String" Name="strPDFFolderPath" />
      <Variable x:TypeArguments="x:String" Name="strImageFolderPath" />
      <Variable x:TypeArguments="x:String" Name="strOtherFolderPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,257" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke EmailExtractionSequence workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="EmailExtractionSequence.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="MailFolderPath">[MailFolderPath]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="AccountName">[MailAccountName]</InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="DT_MappingTemplate">[DT_MappingTemplate]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="VendorNameHeader">[strVendorNameHeader]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="DomainNameHeader">[strDomainNameHeader]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="AlphaKeyHeader">[strAlphaKeyHeader]</InArgument>
              <InArgument x:TypeArguments="snm:MailMessage" x:Key="Mail">[in_TransactionItem]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="AlphaKey">[strAlphaKey]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="InputFolderPath">[InputFolderPath]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="BusinessExceptionFolderPath">[BusinessExceptionFolderPath]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="SystemExceptionFolderPath">[SystemExceptionFolderPath]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="VendorFolderPath">[strVendorFolderPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="VendorExcelFolderPath">[strEmailCopyPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="VendorPDFFolderPath">[strPDFFolderPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="VendorImageFolderPath">[strImageFolderPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="VendorOtherFolderPath">[strOtherFolderPath]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="VendorEmailPath">[strEmailCopyPath]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="strImageExtension">[strImageExtension]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="strPDFExtension">[strPDFExtension]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="strExcelExtension">[strExcelExtension]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
  </Sequence>
</Activity>